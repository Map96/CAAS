version: "3.9"

services:

  mongodb:
    container_name: mongodb
    image: mongo:4.2.8
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/data:/data/db
      - ./mongod.conf:/etc/mongod.conf
    command: --config /etc/mongod.conf
    networks:
      - docker-net-services

  redis:
    image: 'bitnami/redis:latest'
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      docker-net-services:

  zookeeper:
    image: 'bitnami/zookeeper'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      docker-net-services:

  kafka:
    image: 'bitnami/kafka'
    container_name: kafka
    ports:
      - '9092:9092'
    volumes:
      - './connect-standalone.properties:/opt/bitnami/kafka/config/connect-standalone.properties'
      - './mongo-source.properties:/opt/bitnami/kafka/config/mongo-source.properties'
      - './server.properties:/opt/bitnami/kafka/config/server.properties'
      - './kafka-connect/lib/avro-1.11.0.jar:/opt/bitnami/kafka/libs/avro-1.11.0.jar'
      - './kafka-connect/lib/bson-4.7.2.jar:/opt/bitnami/kafka/libs/bson-4.7.2.jar'
      - './kafka-connect/lib/bson-record-codec-4.7.2.jar:/opt/bitnami/kafka/libs/bson-record-codec-4.7.2.jar'
      - './kafka-connect/lib/kafka-avro-serializer-5.5.1.jar:/opt/bitnami/kafka/libs/kafka-avro-serializer-5.5.1.jar'
      - './kafka-connect/lib/kafka-schema-registry-client-5.5.1.jar:/opt/bitnami/kafka/libs/kafka-schema-registry-client-5.5.1.jar'
      - './kafka-connect/lib/kafka-schema-serializer-5.5.1.jar:/opt/bitnami/kafka/libs/kafka-schema-serializer-5.5.1.jar'
      - './kafka-connect/lib/mongodb-driver-core-4.7.2.jar:/opt/bitnami/kafka/libs/mongodb-driver-core-4.7.2.jar'
      - './kafka-connect/lib/mongodb-driver-sync-4.7.2.jar:/opt/bitnami/kafka/libs/mongodb-driver-sync-4.7.2.jar'
      - './kafka-connect/lib/mongo-kafka-connect-1.11.0.jar:/opt/bitnami/kafka/libs/mongo-kafka-connect-1.11.0.jar'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LOG_DIRS=/tmp/kafka_mounts/logs
    depends_on:
      - zookeeper
    networks:
      docker-net-services:

  kafka-connect:
    image: 'bitnami/kafka'
    container_name: kafka_connect
    ports:
      - '8083:8083'
    volumes:
      - './connect-standalone.properties:/opt/bitnami/kafka/config/connect-standalone.properties'
      - './mongo-source.properties:/opt/bitnami/kafka/config/mongo-source.properties'
      - './server.properties:/opt/bitnami/kafka/config/server.properties'
      - './kafka-connect/lib/avro-1.11.0.jar:/opt/bitnami/kafka/libs/avro-1.11.0.jar'
      - './kafka-connect/lib/bson-4.7.2.jar:/opt/bitnami/kafka/libs/bson-4.7.2.jar'
      - './kafka-connect/lib/bson-record-codec-4.7.2.jar:/opt/bitnami/kafka/libs/bson-record-codec-4.7.2.jar'
      - './kafka-connect/lib/kafka-avro-serializer-5.5.1.jar:/opt/bitnami/kafka/libs/kafka-avro-serializer-5.5.1.jar'
      - './kafka-connect/lib/kafka-schema-registry-client-5.5.1.jar:/opt/bitnami/kafka/libs/kafka-schema-registry-client-5.5.1.jar'
      - './kafka-connect/lib/kafka-schema-serializer-5.5.1.jar:/opt/bitnami/kafka/libs/kafka-schema-serializer-5.5.1.jar'
      - './kafka-connect/lib/mongodb-driver-core-4.7.2.jar:/opt/bitnami/kafka/libs/mongodb-driver-core-4.7.2.jar'
      - './kafka-connect/lib/mongodb-driver-sync-4.7.2.jar:/opt/bitnami/kafka/libs/mongodb-driver-sync-4.7.2.jar'
      - './kafka-connect/lib/mongo-kafka-connect-1.11.0.jar:/opt/bitnami/kafka/libs/mongo-kafka-connect-1.11.0.jar'
    depends_on:
      - zookeeper
      - kafka
      - mongodb
    command: /opt/bitnami/kafka/bin/connect-standalone.sh /opt/bitnami/kafka/config/connect-standalone.properties /opt/bitnami/kafka/config/mongo-source.properties
    networks:
      docker-net-services:

  tomcat:
    container_name: tomcat-process-data
    image: tomcat:9.0.34-jdk11
    depends_on:
      - zookeeper
      - kafka
      - mongodb
      - kafka-connect
    build:
      context: tomcat
    ports:
      - "8080:8080"
    environment:
      MONGODB_HOST: mongodb
      REDIS_HOST: redis
      KAFKA_HOST: kafka
      MONGODB_PORT: 27017
      REDIS_PORT: 6379
      KAFKA_PORT: 9092
      NUM_THREADS: 10
      NUM_QUERIES_PER_THREAD: 10000
      isExternalCache: "true"
      SCHEDULE_TIME: 1
      TTL: 10
    volumes:
      - ./logs/tomcat:/usr/local/tomcat/logs
      - ./logs/tomcat/log4j2logs:/usr/local/tomcat/logs/log4j2logs
    command: [ sh, -c, "start.sh" ]
    networks:
      docker-net-services:

  tomcat1:
    container_name: tomcat-push-data
    image: tomcat:9.0.34-jdk11
    depends_on:
      - zookeeper
      - kafka
      - mongodb
      - kafka-connect
    build:
      context: tomcat1
    ports:
      - "8081:8080"
    environment:
      MONGODB_HOST: mongodb
      REDIS_HOST: redis
      KAFKA_HOST: kafka
      MONGODB_PORT: 27017
      REDIS_PORT: 6379
      KAFKA_PORT: 9092
      NUM_THREADS: 10
      NUM_QUERIES_PER_THREAD: 10000
      isExternalCache: "true"
      SCHEDULE_TIME: 1
      TTL: 10
    volumes:
      - ./logs1/tomcat:/usr/local/tomcat/logs
      - ./logs1/tomcat/log4j2logs:/usr/local/tomcat/logs/log4j2logs
    command: [ sh, -c, "start.sh" ]
    networks:
      docker-net-services:
networks:
  docker-net-services:
